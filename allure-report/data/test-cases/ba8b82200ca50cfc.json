{"uid":"ba8b82200ca50cfc","name":"test_OrangeHRM_Login_002","fullName":"testCases.test_OrangeHRM_Login.Test_OrangeHRM_Login#test_OrangeHRM_Login_002","historyId":"bc10d028cd007583a03d753575ce0457","time":{"start":1723496035240,"stop":1723496037495,"duration":2255},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_OrangeHRM_Login.Test_OrangeHRM_Login object at 0x000001FCCC36A5D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5c3cca42647e25602863a3b59e4c644\")>\n\n    @pytest.mark.sanity\n    @pytest.mark.group1\n    def test_OrangeHRM_Login_002(self, setup):\n        self.log.info(\"test_OrangeHRM_Login_002 is started\")  # Log the start of the test\n        self.driver = setup  # Initialize the WebDriver using the setup fixture\n        self.log.info(\"Opening the browser\")  # Log the action of opening the browser\n        self.lp = LoginPage_Class(self.driver)  # Create an instance of the LoginPage class\n        # self.driver.find_element(By.XPATH, \"//input[@placeholder='Username']\").send_keys(\"Admin\")  # Example of locating and interacting with an element\n        # print(\"Username-->\" + self.Username)  # Print the username\n        # print(\"Password-->\" + self.Password)  # Print the password\n        self.log.info(\"Entering Username-->\" + self.Username)  # Log the action of entering the username\n        self.lp.Enter_UserName(self.Username)  # Enter the username using the page object method\n        # self.driver.find_element(By.XPATH, \"//input[@placeholder='Password']\").send_keys(\"admin123\")  # Example of locating and interacting with an element\n        self.log.info(\"Entering Password-->\" + self.Password)  # Log the action of entering the password\n        self.lp.Enter_Password(self.Password)  # Enter the password using the page object method\n        # self.driver.find_element(By.XPATH, \"//button[normalize-space()='Login']\").click()  # Example of locating and interacting with an element\n        self.log.info(\"Clicking on login button\")  # Log the action of clicking the login button\n        self.lp.Click_LoginButton()  # Click the login button using the page object method\n        self.log.info(\"Verifying the login status\")  # Log the verification of the login status\n        if self.lp.Validate_Login_Stauts() == \"LoginPass\":  # Check if the login status is \"LoginPass\"\n            self.log.info(\"test_OrangeHRM_Login_002 is passed\")  # Log the success of the test\n            time.sleep(2)  # Wait for 2 seconds\n            self.log.info(\"Taking the screenshot\")  # Log the action of taking a screenshot\n            self.driver.save_screenshot(\".\\\\Screenshots\\\\test_OrangeHRM_Login_002_pass.png\")  # Save a screenshot\n            self.log.info(\"Clicking on Menu button\")  # Log the action of clicking the menu button\n            self.lp.Click_Menu_Button()  # Click the menu button using the page object method\n            self.log.info(\"Clicking on logout button\")  # Log the action of clicking the logout button\n            self.lp.Click_Logout_Button()  # Click the logout button using the page object method\n            assert True  # Assert the test as passed\n        else:\n            self.log.info(\"test_OrangeHRM_Login_002 is failed\")  # Log the failure of the test\n            self.log.info(\"Taking for screenshot\")  # Log the action of taking a screenshot\n            self.driver.save_screenshot(\".\\\\Screenshots\\\\test_OrangeHRM_Login_002_fail.png\")  # Save a screenshot\n>           assert False  # Assert the test as failed\nE           assert False\n\ntestCases\\test_OrangeHRM_Login.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1723496028177,"stop":1723496035236,"duration":7059},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_OrangeHRM_Login.Test_OrangeHRM_Login object at 0x000001FCCC36A5D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5c3cca42647e25602863a3b59e4c644\")>\n\n    @pytest.mark.sanity\n    @pytest.mark.group1\n    def test_OrangeHRM_Login_002(self, setup):\n        self.log.info(\"test_OrangeHRM_Login_002 is started\")  # Log the start of the test\n        self.driver = setup  # Initialize the WebDriver using the setup fixture\n        self.log.info(\"Opening the browser\")  # Log the action of opening the browser\n        self.lp = LoginPage_Class(self.driver)  # Create an instance of the LoginPage class\n        # self.driver.find_element(By.XPATH, \"//input[@placeholder='Username']\").send_keys(\"Admin\")  # Example of locating and interacting with an element\n        # print(\"Username-->\" + self.Username)  # Print the username\n        # print(\"Password-->\" + self.Password)  # Print the password\n        self.log.info(\"Entering Username-->\" + self.Username)  # Log the action of entering the username\n        self.lp.Enter_UserName(self.Username)  # Enter the username using the page object method\n        # self.driver.find_element(By.XPATH, \"//input[@placeholder='Password']\").send_keys(\"admin123\")  # Example of locating and interacting with an element\n        self.log.info(\"Entering Password-->\" + self.Password)  # Log the action of entering the password\n        self.lp.Enter_Password(self.Password)  # Enter the password using the page object method\n        # self.driver.find_element(By.XPATH, \"//button[normalize-space()='Login']\").click()  # Example of locating and interacting with an element\n        self.log.info(\"Clicking on login button\")  # Log the action of clicking the login button\n        self.lp.Click_LoginButton()  # Click the login button using the page object method\n        self.log.info(\"Verifying the login status\")  # Log the verification of the login status\n        if self.lp.Validate_Login_Stauts() == \"LoginPass\":  # Check if the login status is \"LoginPass\"\n            self.log.info(\"test_OrangeHRM_Login_002 is passed\")  # Log the success of the test\n            time.sleep(2)  # Wait for 2 seconds\n            self.log.info(\"Taking the screenshot\")  # Log the action of taking a screenshot\n            self.driver.save_screenshot(\".\\\\Screenshots\\\\test_OrangeHRM_Login_002_pass.png\")  # Save a screenshot\n            self.log.info(\"Clicking on Menu button\")  # Log the action of clicking the menu button\n            self.lp.Click_Menu_Button()  # Click the menu button using the page object method\n            self.log.info(\"Clicking on logout button\")  # Log the action of clicking the logout button\n            self.lp.Click_Logout_Button()  # Click the logout button using the page object method\n            assert True  # Assert the test as passed\n        else:\n            self.log.info(\"test_OrangeHRM_Login_002 is failed\")  # Log the failure of the test\n            self.log.info(\"Taking for screenshot\")  # Log the action of taking a screenshot\n            self.driver.save_screenshot(\".\\\\Screenshots\\\\test_OrangeHRM_Login_002_fail.png\")  # Save a screenshot\n>           assert False  # Assert the test as failed\nE           assert False\n\ntestCases\\test_OrangeHRM_Login.py:80: AssertionError","steps":[],"attachments":[{"uid":"f1689a9530a7ec25","name":"screenshot","source":"f1689a9530a7ec25.png","type":"image/png","size":6772},{"uid":"3c7388e26d87ee69","name":"log","source":"3c7388e26d87ee69.txt","type":"text/plain","size":747}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1723496037639,"stop":1723496039917,"duration":2278},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"tag","value":"group1"},{"name":"tag","value":"sanity"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_OrangeHRM_Login"},{"name":"subSuite","value":"Test_OrangeHRM_Login"},{"name":"host","value":"hp"},{"name":"thread","value":"15136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_OrangeHRM_Login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["sanity","group1"]},"source":"ba8b82200ca50cfc.json","parameterValues":[]}